{"version":3,"file":"static/js/437.f2ff2d9e.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/Posts/AddPostForm/AddPostForm.module.css?3707","components/Profile/Posts/AddPostForm/AddPostForm.jsx","webpack://my-app/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://my-app/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileComponent.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo__wrapper\":\"ProfileInfo_profileInfo__wrapper__sC2w2\",\"profileInfo__wallpaper\":\"ProfileInfo_profileInfo__wallpaper__VOZY8\",\"profileInfo__avatar\":\"ProfileInfo_profileInfo__avatar__DxC1y\",\"profileInfo__content\":\"ProfileInfo_profileInfo__content__U13OW\",\"profileInfo__contacts\":\"ProfileInfo_profileInfo__contacts__EBTtR\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__DYwtJ\"};","import React, {useEffect, useState} from 'react';\r\nimport cls from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <input type=\"text\" onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                : <span onDoubleClick={activateEditMode} className={cls.status}>{status || 'no status('}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport preloader from '../../../images/preloader.gif';\r\nimport wallpaper from '../../../images/c2e8194c0e680c3b76a793baffcecc08.jpg';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (props.profileData === null) {\r\n        return <img src={preloader}/>\r\n    }\r\n    return (\r\n        <div className={cls.profileInfo__wrapper}>\r\n            <img className={cls.profileInfo__wallpaper} src={wallpaper} alt=\"\" />\r\n            <img className={cls.profileInfo__avatar} src={props.profileData.photos.large} alt='аватар пользователя' />\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={cls.profileInfo__content}>\r\n                <div>{props.profileData.fullName}</div>\r\n                <div className={cls.profileInfo__contacts}>\r\n                    Контакты:\r\n                    <ul >\r\n                        <li><b>Facebook:</b> {props.profileData.contacts.facebook}</li>\r\n                        <li><b>Youtube:</b> {props.profileData.contacts.youtube}</li>\r\n                        <li><b>vk:</b> {props.profileData.contacts.vk}</li>\r\n                        <li><b>Instagram:</b> {props.profileData.contacts.instagram}</li>\r\n                    </ul>\r\n                </div>\r\n                <span>В поисках работы: {props.profileData.lookingForAJobDescription}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"addPostForm__wrapper\":\"AddPostForm_addPostForm__wrapper__mACU3\",\"addPostForm__textarea\":\"AddPostForm_addPostForm__textarea__20cXd\",\"addPostForm__button\":\"AddPostForm_addPostForm__button__jcMyc\"};","import React from 'react';\r\nimport cls from './AddPostForm.module.css'\r\nimport { useFormik } from 'formik';\r\n\r\nlet AddPostForm = (props) => {\r\n\r\n    const onSubmit = values => {\r\n        props.addPost(values.postText);\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            postText: ''\r\n        },\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={cls.addPostForm__wrapper}>\r\n            <textarea \r\n                type=\"text\" \r\n                name=\"postText\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.postText}\r\n                placeholder=\"add post\"\r\n                className={cls.addPostForm__textarea}\r\n                cols=\"30\" \r\n                rows=\"5\"\r\n            />\r\n            <button type=\"submit\" className={cls.addPostForm__button}>post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPostForm","// extracted by mini-css-extract-plugin\nexport default {\"post__wrapper\":\"Post_post__wrapper__uI4pB\",\"post__content\":\"Post_post__content__mY5DW\",\"post__avatar\":\"Post_post__avatar__qmtZL\",\"post__text\":\"Post_post__text__63EWY\",\"post__like\":\"Post_post__like__3QOBV\",\"button\":\"Post_button__wF7Os\"};","import cls from './Post.module.css';\r\nimport React from 'react';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cls.post__wrapper}>\r\n            <div className={cls.post__content}>\r\n                <img src={props.avaAdress} alt=\"аватар\" className={cls.post__avatar} />\r\n                <span className={cls.post__text}>{props.message}</span>\r\n            </div>\r\n            <button className={`${cls.post__like} ${cls.button}`}>like {props.likes}</button>\r\n            <button className={`${cls.post__repost} ${cls.button}`}>repost {props.reposts}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"posts__wrapper\":\"Posts_posts__wrapper__qiIOP\"};","import React from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\nimport Post from './Post/Post';\r\nimport cls from './Posts.module.css'\r\n\r\nconst Posts = React.memo((props) => {\r\n    \r\n    let PostsElements = props.postsData.map(m => <Post message={m.message} likes={m.likesCount} reposts={m.repostsCount} avaAdress={m.avaAdress} />)\r\n\r\n    return (\r\n        <div className={cls.posts__wrapper}>\r\n            {PostsElements}\r\n            <AddPostForm textareaValue={props.textareaValue} addPost={props.addPost} />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/ProfileReducer';\r\nimport Posts from './Posts';\r\n\r\nlet mapStateToProp = (state) => {\r\n    return{\r\n        profileWallpapers : state.profileState.profileWallpapers, \r\n        postsData : state.profileState.postsData,\r\n        textareaValue : state.profileState.textareaValue\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProp, {addPost})(Posts)\r\n\r\nexport default PostsContainer\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return(\r\n        <div>\r\n            <ProfileInfo profileData={props.profileData} status={props.status} updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile, setUserStatus, updateUserStatus } from '../../redux/ProfileReducer';\r\nimport Profile from './Profile';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { WithRouter } from '../../hoc/withRouter';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount () {\r\n        let userId = this.props.router.params.userId||this.props.mainUserId;\r\n        this.props.getUserProfile(userId);\r\n        this.props.setUserStatus(userId);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Profile profileData={this.props.profileData} status={this.props.userStatus} updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileData : state.profileState.profileData,\r\n        userStatus : state.profileState.status,\r\n        mainUserId : state.auth.id\r\n    }\r\n}\r\n\r\nconst ProfileComponent = compose(withAuthNavigate, WithRouter, connect(mapStateToProps, {getUserProfile, setUserStatus, updateUserStatus}))(ProfileContainer)\r\n\r\nexport default ProfileComponent\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         profileState : state.profileState,\r\n//         profileData : state.profileState.profileData,\r\n//         postsData : state.profileState.postsData,\r\n//         textareaValue : state.profileState.textareaValue\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { connect } from 'react-redux'\r\n// import Posts from './Posts/Posts'\r\n\r\n// class ProfileContainer extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <Posts postsData={this.props.profileState.postsData}/>  \r\n//         )\r\n//     }\r\n// }\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         profileState : state.profileState,\r\n//         postsData : state.profileState.postsData,\r\n//         textareaValue : state.profileState.textareaValue\r\n//     }\r\n// }\r\n\r\n// let mapDispatchToProps = () => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n// const ProfileComponent = connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\r\n\r\n\r\n// export default ProfileComponent\r\n","import { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForNavigate = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n\r\n    let NavigatedComponent = (props) => {\r\n        if (!props.isAuth) { return <Navigate to='/login/' /> }\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthNaigateComponent = connect(mapStateToPropsForNavigate)(NavigatedComponent)\r\n\r\n\r\n    return ConnectedAuthNaigateComponent\r\n}\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","type","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","className","cls","profileData","src","preloader","wallpaper","alt","photos","large","fullName","contacts","facebook","youtube","vk","instagram","lookingForAJobDescription","formik","useFormik","initialValues","postText","onSubmit","values","addPost","handleSubmit","name","handleChange","handleBlur","placeholder","cols","rows","avaAdress","message","likes","reposts","React","PostsElements","postsData","map","m","likesCount","repostsCount","textareaValue","connect","state","profileWallpapers","profileState","Posts","ProfileContainer","userId","this","router","params","mainUserId","getUserProfile","setUserStatus","userStatus","updateUserStatus","compose","withAuthNavigate","WithRouter","auth","id","mapStateToPropsForNavigate","isAuth","Component","to"],"sourceRoot":""}