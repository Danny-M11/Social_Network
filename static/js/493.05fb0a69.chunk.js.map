{"version":3,"file":"static/js/493.05fb0a69.chunk.js","mappings":"kJACA,MAAmC,kCAAnC,EAA6E,uBAA7E,EAA+G,0BAA/G,EAA4J,kC,UCA5J,EAAkC,gCAAlC,EAAmF,+BAAnF,EAAiI,6B,SCajI,EAXe,SAACA,GACZ,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,iBAAKC,UAAWC,EAAoB,WAChC,gBAAKC,IAAKL,EAAMM,OAAQC,IAAI,GAAGJ,UAAWC,KAC1C,SAAC,KAAO,CAACI,GAAIP,EAAME,UAAWC,EAAiB,SAAEJ,EAAMS,SAGnE,ECXA,GAAgB,iBAAmB,kCAAkC,gBAAkB,kCCUvF,EATgB,SAACT,GACb,OACI,iBAAKG,UAAWC,EAAAA,iBAAqB,WACjC,gBAAKD,UAAWC,EAAAA,gBAAqBC,IAAKL,EAAMM,OAAQC,IAAI,MAC5D,gBAAKJ,UAAWC,EAAAA,cAAkB,SAAEJ,EAAMU,YAGtD,ECRA,G,QAA0C,iDAA1C,EAAkH,8CAAlH,EAAyL,+C,UCkCzL,EA/BuB,SAACV,GAEpB,IAQIW,GAASC,EAAAA,EAAAA,IAAU,CACnBC,cATgB,CAChBC,kBAAmB,IASnBC,SANW,SAAAC,GACXhB,EAAMiB,WAAWD,EAAOF,kBAC5B,IAOA,OACI,kBAAMC,SAAUJ,EAAOO,aAAcf,UAAWC,EAA4B,WACxE,kBACIe,KAAK,OACLC,KAAK,oBACLC,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOa,WACfC,MAAOd,EAAOK,OAAOF,kBACrBY,YAAY,cACZvB,UAAWC,KAEf,mBAAQe,KAAK,SAAShB,UAAWC,EAA2B,SAAC,WAGzE,ECRA,EAnBgB,SAACJ,GACb,IAAI2B,EAAkB3B,EAAM4B,aAAaC,YAAYC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAM,CAACtB,KAAMsB,EAAEtB,KAAMP,GAAI6B,EAAE7B,GAAII,OAAQyB,EAAEC,QAAS,IAC9GC,EAAkBjC,EAAM4B,aAAaM,YAAYJ,KAAK,SAAAK,GAAC,OAAI,SAAC,EAAO,CAACzB,QAASyB,EAAEzB,QAASJ,OAAQ6B,EAAEH,QAAS,IAE/G,OACI,iBAAK7B,UAAWC,EAAqB,WACjC,gBAAKD,UAAWC,EAAU,SACpBuB,KAEN,iBAAKxB,UAAWC,EAAa,WACzB,gBAAKD,UAAWC,EAAqB,SAC/B6B,KAEN,SAAC,EAAc,CAACG,MAASpC,EAAM4B,aAAcX,WAAcjB,EAAMiB,WAAYoB,qBAAwBrC,EAAMqC,4BAI3H,E,8BCTA,GAFyBC,E,QAAAA,IAAQC,EAAAA,GAAkBC,EAAAA,EAAAA,KAN7B,SAACJ,GACnB,MAAO,CACHR,aAAcQ,EAAMR,aAE5B,GAE4E,CAACX,WAAAA,EAAAA,IAApDqB,CAAkEG,E,kGCTvFC,EAA6B,SAACN,GAC9B,MAAO,CACHO,OAASP,EAAMQ,KAAKD,OAE5B,EAEaJ,EAAmB,SAACM,GAU7B,OAHoCL,EAAAA,EAAAA,IAAQE,EAARF,EALX,SAACxC,GACtB,OAAKA,EAAM2C,QACJ,SAACE,GAAS,UAAK7C,KADM,SAAC,KAAQ,CAACQ,GAAG,WAE7C,GAMJ,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/NewMessageForm/NewMessageForm.module.css?8955","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__EG6D1\",\"chats\":\"Dialogs_chats__hChNo\",\"messages\":\"Dialogs_messages__0MLEM\",\"messages__window\":\"Dialogs_messages__window__EsaFW\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog__wrapper\":\"Dialog_dialog__wrapper__xIo5j\",\"dialog__avatar\":\"Dialog_dialog__avatar__5Hiij\",\"dialog__name\":\"Dialog_dialog__name__v1igs\"};","import { NavLink } from 'react-router-dom'\r\nimport cls from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    const path = '/dialogs/' + props.id\r\n    \r\n    return (\r\n        <div className={cls.dialog__wrapper}>\r\n            <img src={props.avatar} alt=\"\" className={cls.dialog__avatar} />\r\n            <NavLink to={path} className={cls.dialog__name}>{props.user}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"message__wrapper\":\"Message_message__wrapper__tVx-x\",\"message__avatar\":\"Message_message__avatar__Zo36a\"};","import cls from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cls.message__wrapper}>\r\n            <img className={cls.message__avatar} src={props.avatar} alt=\"\" />\r\n            <div className={cls.message__text}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"newMessageForm__wrapper\":\"NewMessageForm_newMessageForm__wrapper__QKg-D\",\"newMessageForm__input\":\"NewMessageForm_newMessageForm__input__XVVG2\",\"newMessageForm__button\":\"NewMessageForm_newMessageForm__button__dSMSN\"};","import React from 'react';\r\nimport cls from './NewMessageForm.module.css';\r\nimport { useFormik } from 'formik';\r\n\r\nconst NewMessageForm = (props) => {\r\n    \r\n    let initialValues = {\r\n        messageInputValue: ''\r\n    }\r\n\r\n    let onSubmit = values => {\r\n        props.addMessage(values.messageInputValue)\r\n    }\r\n    \r\n    let formik = useFormik({\r\n        initialValues,\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={cls.newMessageForm__wrapper}>\r\n            <input \r\n                type=\"text\"\r\n                name=\"messageInputValue\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.messageInputValue}\r\n                placeholder=\"add message\" \r\n                className={cls.newMessageForm__input}\r\n            />\r\n            <button type=\"submit\" className={cls.newMessageForm__button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewMessageForm","import cls from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport NewMessageForm from './NewMessageForm/NewMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let DialogsElements = props.dialogsState.dialogsData.map( d => <Dialog user={d.user} id={d.id} avatar={d.avaUrl}/>)\r\n    let MessageElements = props.dialogsState.messageData.map( m => <Message message={m.message} avatar={m.avaUrl}/>)\r\n    \r\n    return (\r\n        <div className={cls.dialogs__wrapper}>\r\n            <div className={cls.chats}>\r\n                { DialogsElements }\r\n            </div>\r\n            <div className={cls.messages}>\r\n                <div className={cls.messages__window}>\r\n                    { MessageElements } \r\n                </div >   \r\n                <NewMessageForm state = {props.dialogsState} addMessage = {props.addMessage} onMessageInputUpdate = {props.onMessageInputUpdate}/>           \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs';\r\nimport { addMessage} from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsState: state.dialogsState,\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(withAuthNavigate, connect(mapStateToProps, {addMessage}))(Dialogs)\r\n\r\nexport default DialogsContainer","import { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForNavigate = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n\r\n    let NavigatedComponent = (props) => {\r\n        if (!props.isAuth) { return <Navigate to='/login/' /> }\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthNaigateComponent = connect(mapStateToPropsForNavigate)(NavigatedComponent)\r\n\r\n\r\n    return ConnectedAuthNaigateComponent\r\n}\r\n"],"names":["props","path","id","className","cls","src","avatar","alt","to","user","message","formik","useFormik","initialValues","messageInputValue","onSubmit","values","addMessage","handleSubmit","type","name","onChange","handleChange","onBlur","handleBlur","value","placeholder","DialogsElements","dialogsState","dialogsData","map","d","avaUrl","MessageElements","messageData","m","state","onMessageInputUpdate","compose","withAuthNavigate","connect","Dialogs","mapStateToPropsForNavigate","isAuth","auth","Component"],"sourceRoot":""}